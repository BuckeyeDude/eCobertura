<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="ecobertura.core">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../prog/eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <path id="Plug-in Dependencies.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.runtime_3.5.0.v20090525.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.osgi_3.5.1.R35x_v20090827.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.weaving.hook_1.0.0.200902121956.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.common_3.5.1.R35x_v20090807-1100.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.jobs_3.4.100.v20090429-1800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.runtime.compatibility.registry_3.2.200.v20090429-1800/runtime_registry_compatibility.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.registry_3.4.100.v20090520-1800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.preferences_3.2.300.v20090520-1800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.contenttype_3.4.1.R35x_v20090826-0451.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.app_1.2.0.v20090520-1800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.debug.core_3.5.0.v20090526-1600.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.resources_3.5.1.R35x_v20090826-0451.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.launching_3.5.0.v20090527.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.core_3.5.1.v_972_R35x.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.compiler.apt_1.0.201.R35x_v20090825-1530.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.compiler.tool_1.0.100.v_972_R35x.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/scala.library_2.8.0.r20879-b20100214020153.jar"/>
    </path>
    <path id="Mockito.userclasspath">
        <pathelement location="../../../../prog/java/mockito-1.8.0/mockito-all-1.8.0.jar"/>
    </path>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit4_4.5.0.v20090824/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
    </path>
    <path id="Scala Library version 2.8.0.r20879-b20100214020153.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/configuration/org.eclipse.osgi/bundles/623/1/.cp/lib/scala-library.jar"/>
        <pathelement location="${ECLIPSE_HOME}/configuration/org.eclipse.osgi/bundles/623/1/.cp/lib/scala-dbc.jar"/>
        <pathelement location="${ECLIPSE_HOME}/configuration/org.eclipse.osgi/bundles/623/1/.cp/lib/scala-swing.jar"/>
    </path>
    <path id="ecobertura.core.classpath">
        <pathelement location="lib/asm-3.0.jar"/>
        <pathelement location="lib/asm-tree-3.0.jar"/>
        <pathelement location="lib/cobertura.jar"/>
        <pathelement location="lib/jakarta-oro-2.0.8.jar"/>
        <pathelement location="lib/log4j-1.2.9.jar"/>
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="Mockito.userclasspath"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="bin"/>
        <path refid="Scala Library version 2.8.0.r20879-b20100214020153.libraryclasspath"/>
    </path>
    <path id="run.ecobertura.core.log.classpath">
        <path refid="Scala Library version 2.8.0.r20879-b20100214020153.libraryclasspath"/>
        <path refid="ecobertura.core.classpath"/>
    </path>
    <path id="run.LogStatusTest (2).classpath">
        <path refid="Scala Library version 2.8.0.r20879-b20100214020153.libraryclasspath"/>
        <path refid="ecobertura.core.classpath"/>
    </path>
    <path id="run.test (1).classpath">
        <path refid="Scala Library version 2.8.0.r20879-b20100214020153.libraryclasspath"/>
        <path refid="ecobertura.core.classpath"/>
    </path>
	
    <target name="init">
    	<taskdef resource="scala/tools/ant/antlib.xml">
    		<classpath>
    			<pathelement location="${ECLIPSE_HOME}/plugins/scala.tools.nsc_2.8.0.r20879-b20100214020153.jar"   />
    			<path refid="Scala Library version 2.8.0.r20879-b20100214020153.libraryclasspath" />
    		</classpath>
        </taskdef>
    	
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <scalac destdir="bin" target="jvm-1.5">
            <src path="src"/>
            <classpath refid="ecobertura.core.classpath"/>
        </scalac>
        <scalac destdir="bin" target="jvm-1.5">
            <src path="test"/>
            <classpath refid="ecobertura.core.classpath"/>
        </scalac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="ecobertura.core.log">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="ecobertura.core.log.EclipseLoggerTest" todir="${junit.output.dir}"/>
            <test name="ecobertura.core.log.LogStatusTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.ecobertura.core.log.classpath"/>
        </junit>
    </target>
    <target name="LogStatusTest (2)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="ecobertura.core.log.LogStatusTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.LogStatusTest (2).classpath"/>
        </junit>
    </target>
    <target name="test (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="ecobertura.core.log.EclipseLoggerTest" todir="${junit.output.dir}"/>
            <test name="ecobertura.core.log.LogStatusTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.test (1).classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
