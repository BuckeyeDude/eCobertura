<?xml version="1.0" encoding="UTF-8"?>
<project name="Build eCobertura" default="runBuild">
	
	<property name="builder" location="." />
	<property name="topLevelElementId" value="ecobertura" />
	<property name="baseLocation" location="${eclipse.home}" />
	<property name="base" location="${baseLocation}/.." />
	<property name="buildDirectory" location="/temp/eclipse.build" />
	<property name="significantVersionDigits" value="3" />	
	<property name="individualSourceBundles" value="true" />
	
	<!-- update site generation -->
	<property name="p2.gathering" value="true" />
	<property name="p2.category.definition" value="file:${buildDirectory}/category.xml" />
	<property name="p2.compress" value="true" />
	
	<property name="scala.home" location="." />
	<property name="scala-library.jar" value="../ecobertura.core/lib/scala-library.jar" />
	<property name="scala-compiler.jar" value="./lib/scala-compiler.jar" />
	
	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath>
			<pathelement location="${scala-compiler.jar}" />
			<pathelement location="${scala-library.jar}" />
		</classpath>
    </taskdef>
	
	<tstamp>
		<format property="forceContextQualifier" pattern="yyyyMMddHHmm" />
	</tstamp>
	
	<import file="${eclipse.pdebuild.scripts}/build.xml" />
	
	<target name="copyProjects">
		<delete dir="${buildDirectory}" />
		<mkdir dir="${buildDirectory}" />
		
		<record name="${buildDirectory}/${topLevelElementId}-build.log" loglevel="verbose" />
		<echoproperties />
		
        <!-- copy site.xml -->
        <copy todir="${buildDirectory}">
            <fileset dir="." includes="category.xml" />
        </copy>
        
		<mkdir dir="${buildDirectory}/features/${topLevelElementId}" />
		<copy todir="${buildDirectory}/features/${topLevelElementId}">
			<fileset dir="../ecobertura.feature" />
		</copy>
		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins">
			<fileset dir="..">
				<include name="ecobertura.ui/**" />
				<include name="ecobertura.core/**" />
				<exclude name="*/bin/**" />
			</fileset>
		</copy>
	</target>

	<target name="copyReadmes" depends="copyProjects">
		<copy todir="${buildDirectory}/features/${topLevelElementId}/sourceTemplateBundle">
			<fileset dir=".." includes="COPYING, COPYRIGHT, README, SCALA-LICENCE" />
		</copy>
		<copy todir="${buildDirectory}/features/${topLevelElementId}/sourceTemplatePlugin">
			<fileset dir=".." includes="COPYING, COPYRIGHT, README, SCALA-LICENCE" />
		</copy>
	</target>

	<target name="copyResults">
		<property file="${buildDirectory}/finalFeaturesVersions.properties" />
		<property name="zipFileName" value="${topLevelElementId}-${buildId}-group.group.group.zip" />
		<delete dir="../bin" />
		<mkdir dir="../bin" />
		<copy todir="../bin">
			<fileset dir="${buildDirectory}/${buildType}.${buildId}"
				includes="${zipFileName}" />
		</copy>
		<move file="../bin/${zipFileName}" 
			tofile="../bin/${topLevelElementId}_${ecobertura}.zip"/>
	</target>
	
	<target name="runBuild" depends="copyProjects, copyReadmes, main, copyResults" />
</project>